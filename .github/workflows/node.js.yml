# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    # Defines the type of runner the job runs on
    runs-on: ubuntu-latest
    
    steps:
      cd front-end
      
      - name: Checkout to the repository
        uses: actions/checkout@v2
        
      - name: Set up NodeJS environment
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
        
      # Consider this as an add on to optimize the execution of actions
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
       
      - name: Install package dependencies
        run: npm install
      
      - name: Check linting and formatting
        # Custom script for checking the linting and formatting being in place
        run: npm run lint
      
      # Run test cases and this could ensure minimum coverage as well if set
      - name: Execute test cases
        run: npm run test
        
      - name: Create test build
        run: npm run build
